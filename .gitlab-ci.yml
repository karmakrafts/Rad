workflow:
  auto_cancel:
    on_new_commit: interruptible
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "schedule"

stages:
  - build
  - security
  - publish
  - deploy

variables:
  GRADLE_OPTS: -Dorg.gradle.daemon=false
  GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle
  KONAN_DATA_DIR: $CI_PROJECT_DIR/.konan

# ------------------------------ Conditions

.if-merge-request-or-main: &if-merge-request-or-main
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
  - if: $CI_PIPELINE_SOURCE == "schedule"
    when: never

.if-main: &if-main
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - if: $CI_PIPELINE_SOURCE == "schedule"
    when: never

.if-release: &if-release
  - if: '$CI_COMMIT_TAG =~ /^\d+.\d+.\d+.*/'
  - if: $CI_PIPELINE_SOURCE == "schedule"
    when: never

# ------------------------------ Caches

.cache-mac: &cache-mac
  - key: "$CI_PROJECT_NAME-cache-mac"
    policy: pull-push
    paths:
      - $GRADLE_USER_HOME
      - $KONAN_DATA_DIR

.pull-cache-mac: &pull-cache-mac
  - key: "$CI_PROJECT_NAME-cache-mac"
    policy: pull
    paths:
      - $GRADLE_USER_HOME
      - $KONAN_DATA_DIR

# ------------------------------ Security

security:dependencies:
  stage: security
  interruptible: true
  needs: [ ]
  variables:
    TRIVY_CACHE_DIR: ".trivycache/"
  cache:
    paths:
      - .trivycache/
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      allow_failure: true
    - if: '$CI_COMMIT_TAG =~ /^\d+.\d+.\d+.*/'
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "schedule"
      allow_failure: false
  artifacts:
    when: always
    reports:
      dependency_scanning: report.json
  script:
    - trivy repo ./ --exit-code 0
    - trivy repo ./ --exit-code 0 --format template --template "@/contrib/gitlab.tpl" --output report.json
    - trivy repo ./ --exit-code 1 --severity CRITICAL
  tags:
    - linux

# ------------------------------ Build

build:debug:
  stage: build
  rules:
    - *if-merge-request-or-main
  cache:
    - *cache-mac
  before_script:
    - export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home
  script:
    - ./gradlew
      clean
      linkDebugExecutable{MacosX64,MacosArm64,LinuxX64,LinuxArm64,MingwX64}
  tags:
    - macos

build:release:
  stage: build
  rules:
    - *if-release
  cache:
    - *cache-mac
  artifacts:
    paths:
      - rad/build/bin/**
    expire_in: 1 week
  before_script:
    - export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home
  script:
    - ./gradlew
      clean
      linkReleaseExecutable{MacosX64,MacosArm64,LinuxX64,LinuxArm64,MingwX64}
  tags:
    - macos

# ------------------------------ Publish

publish:
  stage: publish
  rules:
    - *if-release
  cache:
    - *pull-cache-mac
  dependencies:
    - build:release
  script:
    - mkdir sorted_artifacts/
    - cp rad/build/bin/linuxX64/releaseExecutable/rad.kexe sorted_artifacts/rad-linux-x64.kexe
    - cp rad/build/bin/linuxArm64/releaseExecutable/rad.kexe sorted_artifacts/rad-linux-arm64.kexe
    - cp rad/build/bin/macosX64/releaseExecutable/rad.kexe sorted_artifacts/rad-macos-x64.kexe
    - cp rad/build/bin/macosArm64/releaseExecutable/rad.kexe sorted_artifacts/rad-macos-arm64.kexe
    - cp rad/build/bin/mingwX64/releaseExecutable/rad.exe sorted_artifacts/rad-windows-x64.exe
    - |
      echo "Current tag is $CI_COMMIT_TAG"
      for file in sorted_artifacts/*; do
        response=$(curl --silent --request POST --header "PRIVATE-TOKEN: $CI_JOB_TOKEN" \
          --form "file=@$file" \
          "$CI_API_V4_URL/projects/$CI_PROJECT_ID/uploads")
        asset_url=$(echo "$response" | jq -er '.url' 2>/dev/null)
        if [ $? -ne 0 ]; then
          echo "Error: Failed to upload file $file. Response was: $UPLOAD_RESPONSE"
          continue
        fi
        echo "Uploading file $file"
        curl --request POST --header "PRIVATE-TOKEN: $CI_JOB_TOKEN" \
          --header "Content-Type: application/json" \
          --data "{ \"name\": \"$(basename $file)\", \"url\": \"$asset_url\" }" \
          "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases/$CI_COMMIT_TAG/assets/links"
      done
  tags:
    - macos